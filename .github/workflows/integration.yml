name: Integration tests
on:
  push:
  pull_request:
  workflow_dispatch:
    inputs:
      createRelease:
        description: 'Upload to GitHub Releases and itch.io?'
        required: true
        default: 'false'

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  setupCache:
    name: Cache repository #to prevent 429 errors with `actions/checkout`
    runs-on: ubuntu-latest
    steps:
      - name: Cache NPM dependencies
        uses: actions/cache@v1
        with:
          path: ./
          key: repo-cache-${{ github.sha }}

      - name: Checkout test fixture
        uses: actions/checkout@v2
        with:
          repository: ViMaSter/unity-version-bump-test-fixture

      - name: Checkout action
        uses: actions/checkout@v2
        with:
          path: action


  core:
    name: Release stream combinations
    needs: [setupCache]
    strategy:
      matrix:
        releaseStreams: [
          # Excluded, as it is not guaranteed these builds are available
          # 'Alpha',
          # 'Beta',
          # 'Patch',
          'Stable',
          'LTS',
          'Alpha,Beta',
          'Alpha,Stable',
          'Alpha,Patch',
          'Alpha,LTS',
          'Beta,Stable',
          'Beta,Patch',
          'Beta,LTS',
          'Stable,Patch',
          'Stable,LTS',
          'Patch,LTS',
          'Alpha,Beta,Stable',
          'Alpha,Beta,Patch',
          'Alpha,Beta,LTS',
          'Alpha,Stable,Patch',
          'Alpha,Stable,LTS',
          'Alpha,Patch,LTS',
          'Beta,Stable,Patch',
          'Beta,Stable,LTS',
          'Beta,Patch,LTS',
          'Stable,Patch,LTS',
          'Alpha,Beta,Stable,Patch',
          'Alpha,Beta,Stable,LTS',
          'Alpha,Beta,Patch,LTS',
          'Alpha,Stable,Patch,LTS',
          'Beta,Stable,Patch,LTS',
          'Alpha,Beta,Stable,Patch,LTS'
        ]
    runs-on: ubuntu-latest
    steps:
      - name: Cache NPM dependencies
        uses: actions/cache@v1
        with:
          path: ./
          key: repo-cache-${{ github.sha }}

      - name: Run action in root with ${{ matrix.releaseStreams }}
        uses: ./action/
        with:
          releaseStreams: ${{ matrix.releaseStreams }}

      - name: Run action in subfolder with ${{ matrix.releaseStreams }}
        uses: ./action/
        with:
          projectPath: subfolder
          releaseStreams: ${{ matrix.releaseStreams }}

  failsIfFolderDoesNotExist:
    name: Fails if implicit root folder does not exist
    needs: [setupCache]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout action
        uses: actions/checkout@v2
        with:
          path: action

      - name: Run action
        uses: ./action/
        id: updateCheck
        continue-on-error: true
        with:
          releaseStreams: Stable,LTS

      - name: Mark pipeline as failed, if previous step has succeeded
        if: ${{steps.updateCheck.outputs.has-never-version}}
        uses: actions/github-script@v3
        with:
          script: |
              core.setFailed('The previous step should fail')
        
  failsIfSubfolderDoesNotExist:
    name: Fails if specified sub folder does not exist
    needs: [setupCache]
    runs-on: ubuntu-latest
    steps:
      - name: Cache NPM dependencies
        uses: actions/cache@v1
        with:
          path: ./
          key: repo-cache-${{ github.sha }}

      - name: Run action
        uses: ./action/
        id: updateCheck
        continue-on-error: true
        with:
          projectPath: non-existent
          releaseStreams: Stable,LTS

      - name: Mark pipeline as failed, if previous step has succeeded
        if: ${{steps.updateCheck.outputs.has-never-version}}
        uses: actions/github-script@v3
        with:
          script: |
              core.setFailed('The previous step should fail')