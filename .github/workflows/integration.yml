name: Integration tests
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  setupCache:
    name: Cache repository #to prevent 429 errors with `actions/checkout`
    runs-on: ubuntu-latest
    steps:
      - name: Cache NPM dependencies
        uses: actions/cache@v3
        with:
          path: ./*
          key: repo-cache-${{ github.sha }}-${{ github.run_id }}-${{ github.run_attempt }}

      - name: Checkout test fixture
        uses: actions/checkout@v2
        with:
          repository: ViMaSter/unity-version-bump-test-fixture

      - name: Checkout action
        uses: actions/checkout@v2
        with:
          path: action


  core:
    name: Release stream combinations
    needs: [setupCache]
    strategy:
      matrix:
        releaseStreams: [
          { stream: 'Stable',       prefix: 'Stable' },
          { stream: 'LTS',          prefix: 'LTS' },
          { stream: 'Alpha,Stable', prefix: 'Alpha-Stable' },
          { stream: 'Beta,Stable',  prefix: 'Beta-Stable' }
        ]
    runs-on: ubuntu-latest
    steps:
      - name: Cache NPM dependencies
        uses: actions/cache@v3
        with:
          path: ./*
          key: repo-cache-${{ github.sha }}-${{ github.run_id }}-${{ github.run_attempt }}

      - name: Run action in root with ${{ matrix.releaseStreams.stream }}
        uses: ./action/
        with:
          releaseStreams: ${{ matrix.releaseStreams.stream }}
          pullRequestPrefix: ${{ github.run_number }}-${{ github.run_attempt }}-${{ matrix.releaseStreams.prefix }}-root
          githubToken: ${{ secrets.REPOSITORY_SECRET }}
          pullRequestLabels: autoupdate
        env:
          GITHUB_REPOSITORY_OWNER: vimaster/unity-version-bump-test-fixture

      - name: Run action in subfolder with ${{ matrix.releaseStreams.stream }}
        uses: ./action/
        with:
          unityProjectPath: subfolder
          releaseStreams: ${{ matrix.releaseStreams.stream }}
          pullRequestPrefix: ${{ github.run_number }}-${{ github.run_attempt }}-${{ matrix.releaseStreams.prefix }}-sub
          githubToken: ${{ secrets.REPOSITORY_SECRET }}
          pullRequestLabels: autoupdate
        env:
          GITHUB_REPOSITORY_OWNER: vimaster/unity-version-bump-test-fixture

  failsIfFolderDoesNotExist:
    name: Fails if implicit root folder does not exist
    needs: [setupCache]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout action
        uses: actions/checkout@v2
        with:
          path: action

      - name: Run action
        uses: ./action/
        id: updateCheck
        continue-on-error: true
        with:
          releaseStreams: Stable,LTS
          pullRequestPrefix: ${{ github.run_number }}-${{ github.run_attempt }}-fail-root
          githubToken: ${{ secrets.REPOSITORY_SECRET }}
          pullRequestLabels: autoupdate
        env:
          GITHUB_REPOSITORY_OWNER: vimaster/unity-version-bump-test-fixture

      - name: Mark pipeline as failed, if previous step has succeeded
        if: ${{steps.updateCheck.outputs.has-never-version}}
        uses: actions/github-script@v6
        with:
          script: |
              core.setFailed('The previous step should fail')
        
  failsIfSubfolderDoesNotExist:
    name: Fails if specified sub folder does not exist
    needs: [setupCache]
    runs-on: ubuntu-latest
    steps:
      - name: Cache NPM dependencies
        uses: actions/cache@v3
        with:
          path: ./*
          key: repo-cache-${{ github.sha }}-${{ github.run_id }}-${{ github.run_attempt }}

      - name: Run action
        uses: ./action/
        id: updateCheck
        continue-on-error: true
        with:
          unityProjectPath: non-existent
          pullRequestPrefix: ${{ github.run_number }}-${{ github.run_attempt }}-fail-sub
          releaseStreams: Stable,LTS
          githubToken: ${{ secrets.REPOSITORY_SECRET }}
          pullRequestLabels: autoupdate
        env:
          GITHUB_REPOSITORY_OWNER: vimaster/unity-version-bump-test-fixture

      - name: Mark pipeline as failed, if previous step has succeeded
        if: ${{steps.updateCheck.outputs.has-never-version}}
        uses: actions/github-script@v6
        with:
          script: |
              core.setFailed('The previous step should fail')